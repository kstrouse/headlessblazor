@typeparam TValue


<HeadlessListboxOption Value="@Value" TValue="TValue" IsEnabled="IsEnabled" SearchValue="@SearchValue" @ref="option" class="@(cssClasses + " cursor-default select-none relative py-2 pl-3 pr-9")">
    <span class="@(option.IsSelected ? "font-semibold" : "font-normal") block truncate">
        @ChildContent
    </span>

    <!--
      Checkmark, only display for selected option.

      Highlighted: "text-white", Not Highlighted: "text-indigo-600"
    -->
    @if (option.IsSelected)
    {
        <span class="@(option.IsActive ? "text-white" : "text-indigo-600") absolute inset-y-0 right-0 flex items-center pr-4">
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
        </span>
    }
</HeadlessListboxOption>

@code
{
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public TValue Value { get; set; }
    [Parameter]
    public bool IsEnabled { get; set; } = true;
    [Parameter]
    public string SearchValue { get; set; }

    private HeadlessListboxOption<TValue> option;
    private string cssClasses
    {
        get
        {
            if (!IsEnabled)
                return "text-gray-300";

            if (option?.IsActive == true)
                return "text-white bg-indigo-600";
            return "text-gray-900";
        }
    }

    protected override void OnParametersSet()
    {
    }
}