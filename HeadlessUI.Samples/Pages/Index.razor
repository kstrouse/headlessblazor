@page "/"

<div class="flex flex-col items-center py-16">
    <div class="w-32 h-32">
        <Transition Show="isOpen"
                    Enter="transform transition duration-1000"
                    EnterDuration="1000"
                    EnterFrom="opacity-0 rotate-[-120deg] scale-50 bg-red-500"
                    EnterTo="opacity-100 rotate-0 scale-100 bg-white"
                    Leave="transform duration-1000 transition ease-in-out"
                    LeaveDuration="1000"
                    LeaveFrom="opacity-100 rotate-0 scale-100 bg-white"
                    LeaveTo="opacity-0 scale-95 bg-green-900"
                    Context="testcss"
                    @ref="transition">
            <div class="w-full h-full bg-green rounded-md shadow-lg @testcss" />
        </Transition>
    </div>
    <button @onclick="() => { isOpen = !isOpen; }" class="flex items-center px-3 py-2 mt-8 text-sm font-medium text-white transition transform bg-black rounded-full backface-visibility-hidden active:bg-opacity-40 hover:scale-105 hover:bg-opacity-30 focus:outline-none bg-opacity-20">
        <svg viewBox="0 0 20 20" fill="none" class="w-5 h-5 opacity-70">
            <path d="M14.9497 14.9498C12.2161 17.6835 7.78392 17.6835 5.05025 14.9498C2.31658 12.2162 2.31658 7.784 5.05025 5.05033C7.78392 2.31666 12.2161 2.31666 14.9497 5.05033C15.5333 5.63385 15.9922 6.29475 16.3266 7M16.9497 2L17 7H16.3266M12 7L16.3266 7"
                  stroke="currentColor"
                  strokeWidth="1.5" />
        </svg>

        <span class="ml-3">Click to transition</span>
    </button>
    <button @onclick="() => { transition.Toggle(); }" class="flex items-center px-3 py-2 mt-8 text-sm font-medium text-white transition transform bg-black rounded-full backface-visibility-hidden active:bg-opacity-40 hover:scale-105 hover:bg-opacity-30 focus:outline-none bg-opacity-20">
        <svg viewBox="0 0 20 20" fill="none" class="w-5 h-5 opacity-70">
            <path d="M14.9497 14.9498C12.2161 17.6835 7.78392 17.6835 5.05025 14.9498C2.31658 12.2162 2.31658 7.784 5.05025 5.05033C7.78392 2.31666 12.2161 2.31666 14.9497 5.05033C15.5333 5.63385 15.9922 6.29475 16.3266 7M16.9497 2L17 7H16.3266M12 7L16.3266 7"
                  stroke="currentColor"
                  strokeWidth="1.5" />
        </svg>

        <span class="ml-3">Click to transition (imperative)</span>
    </button>
</div>

<HeadlessSwitchGroup>
    <HeadlessSwitchLabel>Test Label</HeadlessSwitchLabel>
    @{ var checkedCssClass = isChecked ? "bg-indigo-600" : "bg-gray-200"; }
    <HeadlessSwitch @bind-Checked="isChecked" class="@( $"{checkedCssClass} relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" )">
        <span class="sr-only">Use setting</span>
        <span class="@(isChecked ? "translate-x-5" : "translate-x-0") pointer-events-none relative inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200">
            <span class="@(isChecked ? "opacity-0 ease-out duration-100" : "opacity-100 ease-in duration-200") absolute inset-0 h-full w-full flex items-center justify-center transition-opacity" aria-hidden="true">
                <svg class="bg-white h-3 w-3 text-gray-400" fill="none" viewBox="0 0 12 12">
                    <path d="M4 8l2-2m0 0l2-2M6 6L4 4m2 2l2 2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </span>
            <span class="@(isChecked ? "opacity-100 ease-in duration-200" : "opacity-0 ease-out duration-100") absolute inset-0 h-full w-full flex items-center justify-center transition-opacity" aria-hidden="true">
                <svg class="bg-white h-3 w-3 text-indigo-600" fill="currentColor" viewBox="0 0 12 12">
                    <path d="M3.707 5.293a1 1 0 00-1.414 1.414l1.414-1.414zM5 8l-.707.707a1 1 0 001.414 0L5 8zm4.707-3.293a1 1 0 00-1.414-1.414l1.414 1.414zm-7.414 2l2 2 1.414-1.414-2-2-1.414 1.414zm3.414 2l4-4-1.414-1.414-4 4 1.414 1.414z" />
                </svg>
            </span>
        </span>
    </HeadlessSwitch>
</HeadlessSwitchGroup>
<br />
<br />
<div class="w-72 inline-block top-16">
    <HeadlessListbox TValue="Person" @bind-Value="@selectedPerson" Context="listbox">
        <HeadlessListboxLabel TValue="Person" class="block text-sm font-medium text-gray-700">
            Assigned to
        </HeadlessListboxLabel>
        <div class="mt-1 relative">
            <HeadlessListboxButton TValue="Person" class="bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                <span class="block truncate">
                    @(selectedPerson?.Name ?? "Unassigned")
                </span>
                <span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
                    <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                </span>
            </HeadlessListboxButton>
            <Transition Show="@(listbox.State == ListboxState.Open)"
                        Leave="transition ease-in duration-200"
                        LeaveDuration="200"
                        LeaveFrom="opacity-100"
                        LeaveTo="opacity-0"
                        Context="transitionCss">
                <HeadlessListboxOptions Static="false" TValue="Person" class="@($"transitionCss focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 absolute mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm")">
                    <StyledListboxOption TValue="Person">Unassigned</StyledListboxOption>
                    @foreach (var person in people)
                    {
                        <StyledListboxOption Value="person" TValue="Person" IsEnabled="@person.Enabled" SearchValue="@person.Name">@person.Name</StyledListboxOption>
                    }
                </HeadlessListboxOptions>
            </Transition>
        </div>
    </HeadlessListbox>

    <a href="#">@selectedPerson?.Name [@selectedPerson?.Id]</a>
</div>
<br />
<br />
<div class="w-72 inline-block top-16">
    <HeadlessMenu>
        <span class="rounded-md shadow-sm">
            <HeadlessMenuButton class="inline-flex justify-center w-full rounded-md border border-gray-300 px-4 py-2 bg-white text-sm leading-5 font-medium text-gray-700 hover:text-gray-500 focus:outline-none focus:ring-1 focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-50 active:text-gray-800 transition ease-in-out duration-150">
                <span>Options</span>
                <svg class="w-5 h-5 ml-2 -mr-1"
                        viewBox="0 0 20 20"
                        fill="currentColor">
                    <path fill-rule="evenodd"
                            d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                            clip-rule="evenodd"></path>
                </svg>
            </HeadlessMenuButton>
        </span>
        <HeadlessMenuItems class="focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 z-10 absolute w-56 mt-2 origin-top-right bg-white border border-gray-200 divide-y divide-gray-100 rounded-md shadow-lg outline-none">
            <div class="px-4 py-3">
                <p class="text-sm leading-5">Signed in as</p>
                <p class="text-sm font-medium leading-5 text-gray-900 truncate">
                    tom@example.com
                </p>
            </div>
            <StyledMenuItem TagName="a" href="#account-settings" SearchValue="Account settings">
                Account settings
            </StyledMenuItem>
            <StyledMenuItem TagName="a" href="#" SearchValue="World 2" OnClick="TestClick">
                Hello World 2: isActive = @context.IsActive
            </StyledMenuItem>
            <StyledMenuItem TagName="span" SearchValue="Three">
                Hello World 3: isActive = @context.IsActive
            </StyledMenuItem>
        </HeadlessMenuItems>
    </HeadlessMenu>
</div>

@if (isOpen)
{
    <PortalContent PortalName="modal-root">
<!-- This example requires Tailwind CSS v2.0+ -->
<div class="fixed z-10 inset-0 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <!--
      Background overlay, show/hide based on modal state.

      Entering: "ease-out duration-300"
        From: "opacity-0"
        To: "opacity-100"
      Leaving: "ease-in duration-200"
        From: "opacity-100"
        To: "opacity-0"
    -->
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

    <!-- This element is to trick the browser into centering the modal contents. -->
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

    <!--
      Modal panel, show/hide based on modal state.

      Entering: "ease-out duration-300"
        From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        To: "opacity-100 translate-y-0 sm:scale-100"
      Leaving: "ease-in duration-200"
        From: "opacity-100 translate-y-0 sm:scale-100"
        To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
    -->
    <div class="inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6">
      <div class="hidden sm:block absolute top-0 right-0 pt-4 pr-4">
        <button type="button" class="bg-white rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          <span class="sr-only">Close</span>
          <!-- Heroicon name: outline/x -->
          <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="sm:flex sm:items-start">
        <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
          <!-- Heroicon name: outline/exclamation -->
          <svg class="h-6 w-6 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
          </svg>
        </div>
        <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
          <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">
            Deactivate account
          </h3>
          <div class="mt-2">
            <p class="text-sm text-gray-500">
              Are you sure you want to deactivate your account? All of your data will be permanently removed from our servers forever. This action cannot be undone.
            </p>
          </div>
        </div>
      </div>
      <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
        <button type="button" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm">
          Deactivate
        </button>
        <button type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm">
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>



    </PortalContent>
}

@code {
    private Transition transition;
    private bool isOpen = true;
    private bool isChecked;



    private Person selectedPerson;

    private List<Person> people = new()
    {
        new() { Id = 1, Name = "Durward Reynolds" },
        new() { Id = 2, Name = "Kenton Towne", Enabled = false },
        new() { Id = 3, Name = "Therese Wunsch" },
        new() { Id = 4, Name = "Benedict Kegler" },
        new() { Id = 5, Name = "Katelyn Rohan" }
    };

    private void TestClick()
    {
        var x = "stopHere";
    }

    private record Person
    {
        public int Id { get; init; }
        public string Name { get; init; }
        public bool Enabled { get; init; } = true;
    }

    private string BuildMenuItemCssClass(HeadlessMenuItem item)
    {
        var cssClass = "";
        if (item.IsActive)
            cssClass = "bg-gray-100 text-gray-900 ";
        else
            cssClass = "text-gray-700 ";

        return cssClass + "flex justify-between w-full px-4 py-2 text-sm leading-5 text-left";
    }

}
